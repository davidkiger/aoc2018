# ip 5
 0: addi 5 16 5 # reg[5] += 16                : GOTO 17
 1: seti 1 5 3  # reg[3] = 1
 2: seti 1 4 2  # reg[2] = 1
 3: mulr 3 2 4  # reg[4] = reg[3] * reg[2]
 4: eqrr 4 1 4  # reg[4] = (reg[4] == reg[1])
 5: addr 4 5 5  # reg[5] += reg[4]
 6: addi 5 1 5  # reg[5] += 1
 7: addr 3 0 0  # reg[0] += reg[3]
 8: addi 2 1 2  # reg[2] += 1
 9: gtrr 2 1 4  # reg[4] = (reg[2] > reg[1])
10: addr 5 4 5  # reg[5] += reg[4]
11: seti 2 2 5  # reg[5] = 2
12: addi 3 1 3  # reg[3] += 1
13: gtrr 3 1 4  # reg[4] = (reg[3] > reg[1])
14: addr 4 5 5  # reg[5] += reg[4]
15: seti 1 0 5  # reg[5] = 1
16: mulr 5 5 5  # reg[5] *= reg[5]
17: addi 1 2 1  # reg[1] += 2
18: mulr 1 1 1  # reg[1] *= reg[1]
19: mulr 5 1 1  # reg[1] *= reg[5]
20: muli 1 11 1 # reg[1] *= 11
21: addi 4 1 4  # reg[4] += 1
22: mulr 4 5 4  # reg[4] *= reg[5]
23: addi 4 9 4  # reg[4] += 9
24: addr 1 4 1  # reg[1] += reg[4]
25: addr 5 0 5  # reg[5] += reg[0]
26: seti 0 5 5  # reg[5] = 0                : break out if reg[0] == 0
27: setr 5 6 4  # reg[4] = reg[5]
28: mulr 4 5 4  # reg[4] *= reg[5]
29: addr 5 4 4  # reg[4] += reg[5]
30: mulr 5 4 4  # reg[4] *= reg[5]
31: muli 4 14 4 # reg[4] *= 14
32: mulr 4 5 4  # reg[4] *= reg[5]
33: addr 1 4 1  # reg[1] += reg[4]
34: seti 0 3 0  # reg[0] = 0
35: seti 0 1 5  # reg[5] = 0
